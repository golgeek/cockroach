# Docker Compose configuration for roachprod-centralized
# This provides a complete local development environment

version: '3.8'

services:
  # roachprod-centralized API service
  roachprod-centralized:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"  # API port
      - "8081:8081"  # Metrics port
    environment:
      # Development configuration
      - ROACHPROD_LOG_LEVEL=debug
      - ROACHPROD_API_AUTHENTICATION_DISABLED=true
      - ROACHPROD_DATABASE_TYPE=cockroachdb
      - ROACHPROD_DATABASE_URL=postgresql://root@cockroachdb:26257/roachprod?sslmode=disable
      - ROACHPROD_TASKS_WORKERS=2
      - ROACHPROD_API_METRICS_ENABLED=true
    volumes:
      # Mount configuration file
      - ./development-config.yaml:/etc/roachprod/config.yaml:ro
      # Mount cloud provider credentials (create this directory)
      - ./secrets:/secrets:ro
    depends_on:
      cockroachdb:
        condition: service_healthy
    restart: unless-stopped
    command: ["api", "--config", "/etc/roachprod/config.yaml"]

  # CockroachDB database
  cockroachdb:
    image: cockroachdb/cockroach:latest
    command: start-single-node --insecure --http-addr=0.0.0.0:8080
    ports:
      - "26257:26257"  # SQL port
      - "8090:8080"    # Admin UI port
    volumes:
      - cockroach-data:/cockroach/cockroach-data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    environment:
      - COCKROACH_DATABASE=roachprod
    healthcheck:
      test: ["CMD", "cockroach", "sql", "--insecure", "--execute", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped

volumes:
  cockroach-data:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: roachprod-centralized